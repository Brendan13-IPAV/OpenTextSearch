<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>IP Enforcement Options Prototype</title>
    <style>
        :root {
            --dark-blue: #1D2939;
            --teal: #55ABC9;
            --light-mint: #F6FAFC;
            --border-color: #E4E7EC;
            --text-primary: #1D2939;
            --text-secondary: #667085;
            --highlight: #787ABB;
            
            /* IP-specific colors */
            --patent-color: #1DA7AF;
            --trademark-color: #DE4326;
            --design-color: #84C98F;
            --pbr-color: #F1AC1E;
            --copyright-color: #787ABB;
            --all-rights-color: #667085;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            color: var(--text-primary);
            background-color: var(--light-mint);
            line-height: 1.5;
            margin: 0;
            padding: 0;
        }

        h1, h2, h3 {
            margin-top: 0;
        }

        h1 {
            font-size: 28px;
            font-weight: 600;
            color: var(--teal);
        }

        h2 {
            font-size: 22px;
            font-weight: 500;
            color: var(--text-primary);
            margin-bottom: 20px;
        }

        h3 {
            font-size: 18px;
            font-weight: 600;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .header {
            background-color: var(--dark-blue);
            color: white;
            padding: 15px 0;
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            font-size: 22px;
            font-weight: 600;
        }

        .nav a {
            color: white;
            text-decoration: none;
            margin-left: 30px;
        }

        .main-content {
            padding: 40px 0;
        }

        .title-section {
            margin-bottom: 40px;
            padding: 0 20px;
        }

        /* Two-column form layout */
        .form-layout {
            display: flex;
            gap: 30px;
            margin-bottom: 20px;
        }
        
        .form-left, .form-right {
            flex: 1;
        }
        
        .description-textarea {
            height: 100%;
            min-height: 300px;
        }

        .card {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 1px 3px rgba(16, 24, 40, 0.1);
            padding: 24px;
            margin-bottom: 20px;
            border-left: 3px solid var(--teal);
            transition: transform 0.2s ease, opacity 0.3s ease;
        }
        
        .card:hover {
            transform: translateY(-3px);
            box-shadow: 0 4px 6px rgba(16, 24, 40, 0.1);
        }
        
        .card-updating {
            opacity: 0;
            transform: translateY(10px);
        }

        .feature-tag {
            display: inline-block;
            background-color: #EBF5FF;
            color: var(--teal);
            font-size: 12px;
            padding: 4px 8px;
            border-radius: 4px;
            margin-right: 8px;
            margin-bottom: 5px;
        }
        
        /* IP-specific tags and card borders */
        .tag-Patent {
            background-color: rgba(29, 167, 175, 0.15);
            color: var(--patent-color);
        }
        
        .tag-Trade-mark {
            background-color: rgba(222, 67, 38, 0.15);
            color: var(--trademark-color);
        }
        
        .card-Patent {
            border-left-color: var(--patent-color);
        }
        
        .card-Trade-mark {
            border-left-color: var(--trademark-color);
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
        }

        .form-control {
            width: 100%;
            padding: 10px 12px;
            border: 1px solid var(--border-color);
            border-radius: 6px;
            font-size: 16px;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--teal);
            box-shadow: 0 0 0 3px rgba(85, 171, 201, 0.15);
        }

        .btn {
            padding: 10px 16px;
            border-radius: 6px;
            font-weight: 500;
            cursor: pointer;
            border: none;
            transition: all 0.2s ease;
        }

        .btn-primary {
            background-color: var(--teal);
            color: white;
        }

        .btn-primary:hover {
            background-color: #4799B5;
        }

        .btn-secondary {
            background-color: white;
            border: 1px solid var(--border-color);
            color: var(--text-primary);
        }
        
        .btn-edit {
            background-color: var(--teal);
            color: white;
            border: none;
            border-radius: 6px;
            padding: 8px 16px;
            font-size: 16px;
            cursor: pointer;
            margin-top: 10px;
            display: inline-block;
        }

        .grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
        }

        .two-column {
            display: grid;
            grid-template-columns: 1fr 2fr;
            gap: 30px;
        }
        
        .results-container {
            display: none;
        }
        
        .prompt-container {
            display: block;
        }

        /* Guide text styling */
        .guide-text-container {
            background-color: #F8F9FB;
            border-radius: 6px;
            padding: 16px;
            margin: 20px 0;
            border-left: 3px solid var(--text-secondary);
            transition: all 0.3s ease;
        }
        
        .guide-text-container.active {
            background-color: #EBF5FF;
            border-left-color: var(--teal);
        }
        
        .guide-text {
            color: var(--text-secondary);
            font-style: italic;
            margin: 0;
            transition: color 0.3s ease;
        }
        
        .guide-text-container.active .guide-text {
            color: var(--text-primary);
        }
        
        .filters-panel {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 30px;
            box-shadow: 0 1px 3px rgba(16, 24, 40, 0.1);
        }
        
        .sidebar {
            background-color: #F9FAFB;
            border-radius: 8px;
            padding: 20px;
            height: fit-content;
            box-shadow: 0 1px 3px rgba(16, 24, 40, 0.1);
            border-left: 3px solid var(--teal);
        }
        
        .card-overtitle {
            text-transform: uppercase;
            font-size: 12px;
            font-weight: 600;
            letter-spacing: 0.5px;
            margin-bottom: 8px;
        }
        
        /* Card animation */
        @keyframes cardAppear {
            0% {
                opacity: 0;
                transform: translateY(20px);
            }
            100% {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .card-animated {
            animation: cardAppear 0.4s ease forwards;
            opacity: 0;
        }
        
        /* Responsive design */
        @media (max-width: 768px) {
            .grid {
                grid-template-columns: 1fr;
            }
            .two-column {
                grid-template-columns: 1fr;
            }
            .form-layout {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <header class="header">
        <div class="container">
            <div class="header-content">
                <div class="logo">IP Enforcement Options</div>
                <nav class="nav">
                    <a href="#">Home</a>
                    <a href="#">About</a>
                    <a href="#">Resources</a>
                    <a href="#">Contact</a>
                </nav>
            </div>
        </div>
    </header>

    <div class="container main-content">
        <!-- Initial Prompt Form -->
        <div class="prompt-container" id="promptContainer">
            <div class="title-section">
                <h1>IP Enforcement Options</h1>
                <h2>Help us understand your situation</h2>
                <p>This tool is designed to support people exploring enforcement options for intellectual property (IP). To begin, select the statements that best describe your current situation and what you're hoping to achieve.</p>
            </div>
            
            <div class="card">
                <form id="situationForm">
                    <div class="form-layout">
                        <div class="form-left">
                            <div class="form-group">
                                <label class="form-label" for="situation">Step 1: What brings you here today?</label>
                                <select class="form-control" id="situation" required>
                                    <option value="" selected disabled>Select the option that best describes your current situation</option>
                                    <option value="accused">I've been accused of infringing someone else's IP</option>
                                    <option value="infringement">I believe someone is using my IP without permission</option>
                                    <option value="protection">I want to proactively protect my IP</option>
                                    <option value="conflict">I've come across an IP conflict or issue</option>
                                    <option value="opposition">I believe someone else's IP should not be granted</option>
                                </select>
                            </div>
                            
                            <div class="form-group">
                                <label class="form-label" for="focus">Step 2: What would you like to focus on today?</label>
                                <select class="form-control" id="focus" required>
                                    <option value="" selected disabled>Select the outcome that most closely matches what you're looking to do</option>
                                    <option value="strengthen">Strengthen my position</option>
                                    <option value="support">Get professional support</option>
                                    <option value="agreement">Explore ways to reach agreement with someone</option>
                                    <option value="prevent">Prevent potential infringement</option>
                                </select>
                            </div>
                            
                            <div class="form-group">
                                <label class="form-label" for="ipType">Step 3: What type of IP is involved?</label>
                                <select class="form-control" id="ipType" required>
                                    <option value="" selected disabled>Select the IP type that best fits your situation</option>
                                    <option value="Trade mark (registered)">Registered trade mark</option>
                                    <option value="Patent">Patent</option>
                                    <option value="Design">Registered design</option>
                                    <option value="Unregistered brand or business name">Unregistered trade mark or brand</option>
                                </select>
                            </div>
                        </div>
                        
                        <div class="form-right">
                            <div class="form-group">
                                <label class="form-label" for="description">Step 4: Describe your situation</label>
                                <textarea class="form-control description-textarea" id="description" rows="11" placeholder="This helps us show you content that may be more relevant."></textarea>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Dynamic guide text that updates based on selections -->
                    <div class="guide-text-container" id="guideTextContainer">
                        <p class="guide-text" id="guideText">Select options above to see relevant examples...</p>
                    </div>
                    
                    <button type="submit" class="btn btn-primary" id="exploreBtn">Explore options</button>
                </form>
            </div>
        </div>
        
        <!-- Results Page (initially hidden) -->
        <div class="results-container" id="resultsContainer">
            <div class="title-section">
                <h1>IP Enforcement Options</h1>
                <h2>Options that might be worth considering</h2>
            </div>
            
            <!-- Filters panel at the top -->
            <div class="filters-panel">
                <div class="form-group">
                    <label class="form-label" for="situationFilter">What brings you here today?</label>
                    <select class="form-control" id="situationFilter">
                        <option value="accused">I've been accused of infringing someone else's IP</option>
                        <option value="infringement">I believe someone is using my IP without permission</option>
                        <option value="protection">I want to proactively protect my IP</option>
                        <option value="conflict">I've come across an IP conflict or issue</option>
                        <option value="opposition">I believe someone else's IP should not be granted</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label class="form-label" for="focusFilter">What would you like to focus on today?</label>
                    <select class="form-control" id="focusFilter">
                        <option value="strengthen">Strengthen my position</option>
                        <option value="support">Get professional support</option>
                        <option value="agreement">Explore ways to reach agreement with someone</option>
                        <option value="prevent">Prevent potential infringement</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label class="form-label" for="ipTypeFilter">What type of IP is involved?</label>
                    <select class="form-control" id="ipTypeFilter">
                        <option value="Trade mark (registered)">Registered trade mark</option>
                        <option value="Patent">Patent</option>
                        <option value="Design">Registered design</option>
                        <option value="Unregistered brand or business name">Unregistered trade mark or brand</option>
                    </select>
                </div>
            </div>
            
            <!-- Two-column layout for results -->
            <div class="two-column">
                <!-- Left sidebar with description -->
                <div class="sidebar">
                    <h3>Your description</h3>
                    <p id="userDescription"></p>
                    <button class="btn-edit" id="editDescription">Edit</button>
                </div>
                
                <!-- Main results grid -->
                <div class="grid" id="resultsGrid">
                    <!-- Cards will be dynamically inserted here -->
                </div>
            </div>
            
            <div style="margin-top: 30px;">
                <button class="btn btn-secondary" id="backButton">Back to form</button>
            </div>
        </div>
    </div>

    <script>
        // Load after DOM is fully loaded
        document.addEventListener('DOMContentLoaded', function() {
            // Set up all event listeners
            setupEventListeners();
        });
        
        // Guide Text Data (simplified)
        const guideTextData = [
            {
                "User Goal": "Strengthen my position",
                "IP Type": "Trade mark (registered)",
                "Guide Text": "Someone else is using a name very similar to my registered trade mark. I want to understand what steps I can take to protect it going forward."
            },
            {
                "User Goal": "Strengthen my position",
                "IP Type": "Patent",
                "Guide Text": "I think a competitor's product is similar to my patent, and I want to make sure I'm prepared if they try to copy it more directly."
            },
            {
                "User Goal": "Get professional support",
                "IP Type": "Design",
                "Guide Text": "I've registered a design but someone's making something similar. I want to speak to someone who can help me understand if that matters."
            },
            {
                "User Goal": "Prevent potential infringement",
                "IP Type": "Unregistered brand or business name",
                "Guide Text": "I heard someone might be planning to launch a business with a name very close to mine. I want to know what I can do now to stop this before it happens."
            }
        ];
        
        // IP Enforcement Options Data (simplified)
        const ipOptionsData = [
            {
                "Overtitle": "Patent opposition",
                "Main Title": "Challenge a new or amended patent",
                "Description": "Initiate a challenge to the validity of a new patent with IP Australia",
                "Response Type": "Enforcement; Accused",
                "Right it applies to": "Patent"
            },
            {
                "Overtitle": "Court - Patent",
                "Main Title": "Seek binding, authoritative decisions",
                "Description": "Escalate a wide range of patent matters to court",
                "Response Type": "Enforcement; Accused",
                "Right it applies to": "Patent"
            },
            {
                "Overtitle": "Trade mark opposition",
                "Main Title": "Challenge a new or amended trade mark",
                "Description": "Initiate a challenge to a trade mark application with IP Australia",
                "Response Type": "Enforcement; Accused",
                "Right it applies to": "Trade mark"
            },
            {
                "Overtitle": "Non-use removal",
                "Main Title": "Challenge inactive trade marks",
                "Description": "Apply to remove a registered trade mark that is not being used",
                "Response Type": "Enforcement; Accused",
                "Right it applies to": "Trade mark"
            },
            {
                "Overtitle": "Representation services",
                "Main Title": "Get help from IP professionals",
                "Description": "Engage an attorney or lawyer for representation and advice",
                "Response Type": "Support",
                "Right it applies to": "Any"
            },
            {
                "Overtitle": "IP Australia",
                "Main Title": "Contact for general guidance",
                "Description": "Reach out for general information about IP rights and processes",
                "Response Type": "Support",
                "Right it applies to": "Any"
            },
            {
                "Overtitle": "Warning letter",
                "Main Title": "Send a formal notice",
                "Description": "Communicate concerns and request action through a formal letter",
                "Response Type": "Enforcement",
                "Right it applies to": "Any"
            },
            {
                "Overtitle": "Online platforms",
                "Main Title": "Report IP violations on digital platforms",
                "Description": "Use online platforms' reporting tools to address IP infringements",
                "Response Type": "Enforcement",
                "Right it applies to": "Trade mark; Copyright"
            },
            {
                "Overtitle": "Licensing",
                "Main Title": "Authorise others to use your IP",
                "Description": "Create agreements that permit others to use your IP under specific terms",
                "Response Type": "Agreement",
                "Right it applies to": "Any"
            },
            {
                "Overtitle": "Settlement agreement",
                "Main Title": "Reach a formal resolution",
                "Description": "Create a binding agreement to resolve an IP dispute",
                "Response Type": "Agreement",
                "Right it applies to": "Any"
            }
        ];

        // DOM Elements
        const situationForm = document.getElementById('situationForm');
        const promptContainer = document.getElementById('promptContainer');
        const resultsContainer = document.getElementById('resultsContainer');
        const resultsGrid = document.getElementById('resultsGrid');
        const userDescription = document.getElementById('userDescription');
        const editDescriptionBtn = document.getElementById('editDescription');
        const backButton = document.getElementById('backButton');
        const descriptionField = document.getElementById('description');
        
        // Filter elements
        const situationFilter = document.getElementById('situationFilter');
        const focusFilter = document.getElementById('focusFilter');
        const ipTypeFilter = document.getElementById('ipTypeFilter');
        
        // Function to set up all event listeners
        function setupEventListeners() {
            // Get elements
            const situationSelect = document.getElementById('situation');
            const focusSelect = document.getElementById('focus');
            const ipTypeSelect = document.getElementById('ipType');
            const guideTextContainer = document.getElementById('guideTextContainer');
            const guideText = document.getElementById('guideText');
            
            // Edit description button
            editDescriptionBtn.addEventListener('click', function() {
                promptContainer.style.display = 'block';
                resultsContainer.style.display = 'none';
            });
            
            // Back button
            backButton.addEventListener('click', function() {
                promptContainer.style.display = 'block';
                resultsContainer.style.display = 'none';
            });
            
            // Filter change events - make cards update reactively
            situationFilter.addEventListener('change', updateResults);
            focusFilter.addEventListener('change', updateResults);
            ipTypeFilter.addEventListener('change', updateResults);
            
            // Handle input changes for guide text updates
            situationSelect.addEventListener('change', updateGuideText);
            focusSelect.addEventListener('change', updateGuideText);
            ipTypeSelect.addEventListener('change', updateGuideText);
            
            // Submit form event
            situationForm.addEventListener('submit', function(e) {
                e.preventDefault();
                showResults();
            });
            
            // Direct button click as a fallback
            document.getElementById('exploreBtn').addEventListener('click', function() {
                if (situationForm.checkValidity()) {
                    showResults();
                } else {
                    const submitEvent = new Event('submit', { cancelable: true });
                    situationForm.dispatchEvent(submitEvent);
                }
            });
            
            // Function to update guide text based on selections
            function updateGuideText() {
                // Get current selections
                const focusValue = focusSelect.value;
                const ipTypeValue = ipTypeSelect.value;
                
                // Map focus dropdown values to User Goal values in the CSV
                const focusToGoalMap = {
                    'strengthen': 'Strengthen my position',
                    'agreement': 'Explore ways to reach an agreement',
                    'prevent': 'Prevent potential infringement',
                    'support': 'Get professional support'
                };
                
                const userGoal = focusToGoalMap[focusValue];
                
                // Find matching guide text
                let matchingGuideText = null;
                
                if (userGoal && ipTypeValue) {
                    // Try to find exact match first
                    matchingGuideText = guideTextData.find(item => 
                        item["User Goal"] === userGoal && 
                        item["IP Type"] === ipTypeValue
                    );
                }
                
                // Update the guide text
                if (matchingGuideText) {
                    guideText.textContent = matchingGuideText["Guide Text"];
                    guideTextContainer.classList.add('active');
                    descriptionField.placeholder = matchingGuideText["Guide Text"];
                } else {
                    guideText.textContent = "Select options above to see relevant examples...";
                    guideTextContainer.classList.remove('active');
                    descriptionField.placeholder = "This helps us show you content that may be more relevant.";
                }
            }
        }
        
        // Function to show results page
        function showResults() {
            // Get form values
            const situation = document.getElementById('situation').value;
            const focus = document.getElementById('focus').value;
            const ipType = document.getElementById('ipType').value;
            const description = document.getElementById('description').value;
            
            // Show results container, hide prompt container
            promptContainer.style.display = 'none';
            resultsContainer.style.display = 'block';
            
            // Set filters to match form values
            situationFilter.value = situation;
            focusFilter.value = focus;
            ipTypeFilter.value = ipType;
            
            // Display user description
            userDescription.textContent = description || "No description provided.";
            
            // Generate results
            generateResults(ipType);
        }
        
        // Update results when filters change
        function updateResults() {
            const ipType = ipTypeFilter.value;
            
            // Add animation class to cards
            const cards = document.querySelectorAll('.card:not(:first-child)');
            cards.forEach(card => {
                card.classList.add('card-updating');
            });
            
            // Generate new results after a short delay for animation
            setTimeout(() => {
                generateResults(ipType);
            }, 300);
        }
        
        // Generate results based on IP type and filters
        function generateResults(ipType) {
            // Clear previous results
            resultsGrid.innerHTML = '';
            
            // Map from dropdown value to data value
            const ipTypeMap = {
                'Trade mark (registered)': 'Trade mark',
                'Unregistered brand or business name': 'Trade mark'
            };
            
            // Get the mapped value or use the original if no mapping exists
            const mappedIpType = ipTypeMap[ipType] || ipType;
            
            // Filter options based on IP type
            const filteredOptions = ipOptionsData.filter(option => {
                return option["Right it applies to"] === mappedIpType || 
                       option["Right it applies to"] === "Any" || 
                       option["Right it applies to"].includes(mappedIpType);
            });
            
            // Create cards for each filtered option with staggered animation
            filteredOptions.forEach((option, index) => {
                const card = createCard(option);
                card.style.animationDelay = `${index * 0.05}s`;
                card.classList.add('card-animated');
                resultsGrid.appendChild(card);
            });
            
            // If no results, show a message
            if (filteredOptions.length === 0) {
                const noResults = document.createElement('div');
                noResults.className = 'card';
                noResults.innerHTML = `
                    <h3 class="card-title">No options found</h3>
                    <p>We couldn't find any specific options matching your criteria. Try adjusting your filters or contact an IP professional for assistance.</p>
                `;
                resultsGrid.appendChild(noResults);
            }
        }
        
        // Create a card element for an IP option
        function createCard(option) {
            const card = document.createElement('div');
            card.className = `card card-${option["Right it applies to"].split(';')[0].trim().replace(/\s+/g, '-')}`;
            
            // Determine tag classes based on right it applies to
            const rightTypes = option["Right it applies to"].split(';').map(type => type.trim());
            const tagHtml = rightTypes.map(type => 
                `<span class="feature-tag tag-${type.replace(/\s+/g, '-')}">${type}</span>`
            ).join('');
            
            card.innerHTML = `
                <div class="card-overtitle">${option.Overtitle}</div>
                <h3 class="card-title">${option["Main Title"]}</h3>
                <p>${option.Description}</p>
                <div class="card-tags">
                    ${tagHtml}
                </div>
            `;
            
            return card;
        }
    </script>
</body>
</html>
